[project]
name = "orchestration"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [{ name = "parsa", email = "parsa.miraghaie@gmail.com" }]
requires-python = ">=3.11"
dependencies = [
    "loguru>=0.7.3",
    "pydantic>=2.8.2",
    "plotly>=6.0.0",
    "uv>=0.6.0",
    "python-dotenv>=1.0.1",
    "zenml==0.71",
    "go-task-bin>=3.41.0",
]

[project.optional-dependencies]
skypilot-gcp = ["skypilot[gcp]>=0.8.0"]
[tool.uv.sources]
ml = { path = "../ml" }
application = { path = "../application" }
data = { path = "../data" }
orchestration = { path = "../orchestration" }
serve = { path = "../serve" }

[dependency-groups]
data-package = ["data"]

ml-package = ["ml"]

app-package = ["application"]

ml-data-package = ["ml", "data"]

all-package = ["application", "data", "ml"]

[tool.hatch.build.targets.wheel]
packages = ["src/orchestration"]

[project.scripts]
orchestration = "orchestration:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.ruff]
line-length = 88
target-version = "py39"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
    "S",   # flake8-bandit
    "DTZ", # flake8-datetimez,
    "E4", "E7", "E9", "F"
]
ignore = [
    "E501",  # line too long, handled by formatter
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.isort]
known-first-party = ["data", "ml", "orchestration"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
combine-as-imports = true